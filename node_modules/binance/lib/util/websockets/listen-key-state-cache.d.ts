import { WsMarket } from '../../types/websockets/ws-general';
import { DefaultLogger } from '../logger';
interface ListenKeyPersistenceState {
    keepAliveTimer: ReturnType<typeof setInterval> | undefined;
    keepAliveRetryTimer: ReturnType<typeof setTimeout> | undefined;
    lastKeepAlive: number;
    market: WsMarket;
    keepAliveFailures: number;
}
export declare class ListenKeyStateCache {
    private logger;
    private listenKeyStateStore;
    constructor(customLogger?: DefaultLogger);
    getListenKeyState(listenKey: string, market: WsMarket): ListenKeyPersistenceState;
    private clearUserDataKeepAliveTimer;
    /**
     * Remove all state for listen key. Clears timers too, if any exist on this listen key store.
     */
    clearAllListenKeyState(listenKey: string): void;
}
export {};
